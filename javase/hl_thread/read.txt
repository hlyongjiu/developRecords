多线程实例：
一、ticket----三个售票窗口同时出售50张票
二、bank----两个人AB通过一个账户A在柜台取钱和B在ATM机取钱！
三、running----龟兔赛跑：2000米
  要求：
      (1)兔子每 0.1 秒 5 米的速度，每跑20米休息1秒;
      (2)乌龟每 0.1 秒跑 2 米，不休息；
      (3)其中一个跑到终点后另一个不跑了！
  程序设计思路：
      (1)创建一个Animal动物类，继承Thread，编写一个running抽象方法，重写run方法，把running方法在run方法里面调用。
      (2)创建Rabbit兔子类和Tortoise乌龟类，继承动物类
      (3)两个子类重写running方法
      (4)本题的第3个要求涉及到线程回调。需要在动物类创建一个回调接口，创建一个回调对象。
四、KFC----在一个KFC内，服务员负责生产食物，消费者负责消费食物；
  当生产到一定数量可以休息一下，直到消费完食物，再马上生产，一直循环
  程序涉及到的内容：
  1.这设计到java模式思想：生产者消费者模式
  2.要保证操作对象的统一性，即消费者和服务者都是跟同一个KFC发生关系的，KFC只能new一次
  3.this.notifyAll();和 this.wait();一个是所有唤醒的意思，一个是让自己等待的意思；
  比如本题中，生产者生产完毕后，先所有唤醒（包括消费者和生产者），再让所有自己（生产者）等待
   这时，消费者开始消费，直到食材不够，先所有唤醒（包括消费者和生产者），再让所有自己（消费者）等待
  一直执行上面的操作的循环
  4.生产者和消费者都要继承Thread，才能实现多线程的启动

    程序设计的步骤思路：

      1.创建一个食物类Food，有存放/获取食物的名称的方法
      2.创建一个KFC类，有生产食物和消费食物的方法
      3.创建一个客户类Customer，继承Thread，重写run方法，在run方法里面进行消费食物操作
      4.创建一个服务员类Waiter，继承Thread，重写run方法，在run方法里面进行生产食物的操作
      5.创建主方法的调用类

五、ThreadAddSub----设计四个线程对象对同一个数据进行操作，
    两个线程执行减操作，两个线程执行加操作。
  程序分析：1.创建一个ThreadAddSub类继承Thread，重写run方法
     2.在run方法里面实现加和减的操作，每次操作后睡眠1秒
     3.创建主方法调用类
